@using MusicTheory;
@using MusicTheory.Instruments;

<div id="fretboard">
    <div id="empty"></div>
    @for (int i = 0; i < 25; i++)
    {
        <div id="fret">@i</div>
    }

    @foreach (var str in Guitar.Strings)
    {
        <div id="string">@str.StringNumber</div>

        @foreach (var note in str.Notes)
        {
            <div id="note" class="@HighlightScale(note)">@note</div>
        }
    }
</div>
<EditForm Model="@FormModel" OnValidSubmit="@HandleValidSubmit">
    <InputSelect @bind-Value="FormModel.ScaleKey" >
        @foreach (var item in Enum.GetValues(typeof(Keys)))
        {
            <option value="@item">@item</option>
        }
    </InputSelect>
    <button type="submit">Submit</button>
</EditForm>

@code {
    public Guitar Guitar;
    public Scale Scale;

    public FormModel FormModel = new FormModel();

    public string HighlightScale(Note note) => Scale.HasNote(note) ? "scaleHighlight" : null;


    protected override void OnInitialized()
    {
        Guitar = new MusicTheory.Instruments.Guitar();

        Scale = new Scale(FormModel.ScaleKey, "Major");
    }

    protected void HandleValidSubmit()
    {
        Scale = new Scale(FormModel.ScaleKey, "Major");
        StateHasChanged();
    }

}